{"version":3,"sources":["components/Menu.js","components/App.js","utils/dataHelper.js","serviceWorker.js","index.js"],"names":["Menu","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","cabotPlaces","inputVal","showMenu","filterLocations","bind","assertThisInitialized","toggleSuggestions","setState","event","minimizeMarker","document","getElementById","value","inputString","toUpperCase","filteredPlaces","forEach","location","fullName","indexOf","marker","setVisible","push","_this2","locationlist","map","listItem","index","react_default","a","createElement","key","role","className","tabIndex","onKeyPress","openmarker","onClick","aria-labelledby","id","type","placeholder","onChange","Component","fourSquareClientId","App","currentMarker","previousMarker","initMap","name","description","latitude","longitude","streetAddress","window","self","view","style","height","innerHeight","google","maps","Map","zoom","mapTypeControl","fullscreenControl","center","lat","lng","addDomListener","trigger","setCenter","getCenter","addListener","markerWindow","InfoWindow","getAllLocationsInfo","newLocationsInfo","place","display","long","fetch","then","res","status","getDetailsError","json","data","response","venues","Marker","animation","Animation","DROP","position","LatLng","getVenueDetails","catch","err","console","log","url","venue","bestPhoto","img","prefix","suffix","hereNow","summary","rating","likes","shortUrl","setAnimation","BOUNCE","setContent","getPosition","panBy","displayMarker","open","locationInfo","heading","fourSquareLink","close","components_Menu","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","error","ReactDOM","render","components_App","URL","process","href","origin","addEventListener","concat","contentType","headers","get","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.996fe903.chunk.js","sourcesContent":["import React, {Component} from 'react';\n\nclass Menu extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      'cabotPlaces': [],\n      'inputVal': '',\n      'showMenu': false,\n    };\n    // so we dont lose context\n    this.filterLocations = this.filterLocations.bind(this);\n    this.toggleSuggestions = this.toggleSuggestions.bind(this);\n  }\n  componentWillMount() {\n    this.setState({\n      'cabotPlaces': this.props.cabotPlaces\n    });\n  }\n  toggleSuggestions() {\n    this.setState({\n      'showMenu': !this.state.showMenu\n    });\n  }\n  // filters the list of suggestions\n  filterLocations(event) {\n    this.props.minimizeMarker();\n    let input = document.getElementById('search-input');\n    let inputVal = input.value;\n    let inputString = inputVal.toUpperCase();\n    let filteredPlaces = [];\n    // loop through elements and set visibility if they match the input\n    // inspired by w3c https://www.w3schools.com/howto/howto_js_filter_lists.asp\n    this.props.cabotPlaces.forEach((location) => {\n      if (location.fullName.toUpperCase().indexOf(inputString) > -1) {\n        location.marker.setVisible(true);\n        filteredPlaces.push(location);\n      } else {\n        location.marker.setVisible(false);\n      }\n    });\n    this.setState({\n      'cabotPlaces': filteredPlaces,\n      'inputVal': inputVal\n    });\n  }\n  render() {\n    let locationlist = this.state.cabotPlaces.map((listItem, index) => {\n      return (\n        <li\n          key={index}\n          role=\"button\"\n          className=\"list-item\"\n          tabIndex=\"0\"\n          onKeyPress={this.props.openmarker.bind(this, listItem.marker)}\n          onClick={this.props.openmarker.bind(this, listItem.marker)}\n        >{listItem.fullName}</li>\n      );\n    }, this);\n\n    return (\n      <div className=\"search-menu\">\n        <div className=\"button\" onClick={this.toggleSuggestions}>\n          <h1 className='app-title'> Visit Cabot! </h1>\n          <small>Click to {!this.state.showMenu ? 'see' : 'hide' } Suggestions!</small>\n        </div>\n        <input\n          role=\"search\"\n          aria-labelledby=\"Search\"\n          id=\"search-input\"\n          type=\"text\"\n          placeholder=\"Search Suggestions\"\n          value={this.state.inputVal}\n          onChange={this.filterLocations}\n        />\n        <ul className=\"locations-list\">\n            {this.state.showMenu && locationlist}\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default Menu;\n","import React, {Component} from 'react';\nimport Menu from './Menu';\nimport * as dataHelper from '../utils/dataHelper';\n\nconst fourSquareClientId = \"&client_id=2WN2LW0H3PTZ5ANP5B2P1ZPF0JIDBWZNPHXPBDZIRPJVGPJQ\";\nconst fourSquareClientSecret = \"&client_secret=TQNTS32NRFWBI4WLBB5CMZX4C2VOVX4PNN3BYC3ZSKS2LVAA\";\nconst fourSquareVersion = \"&v=20181115\";\nconst limit = \"&limit=1\";\n\nclass App extends Component {\n\n  constructor(props) {\n\n    super(props);\n\n    this.state = {\n      'cabotPlaces':[],\n      'map': '',\n      'currentMarker': '',\n      'previousMarker': ''\n    };\n\n    // keep context when invoking functions\n    this.initMap = this.initMap.bind(this);\n    this.openmarker = this.openmarker.bind(this);\n    this.minimizeMarker = this.minimizeMarker.bind(this);\n  }\n  componentWillMount() {\n    // get places from data API before component mounts\n    this.setState({\n      'cabotPlaces': dataHelper.getPlaces()\n    });\n  }\n  componentDidMount() {\n    window.initMap = this.initMap;\n  }\n  initMap() {\n    let self = this;\n    let view = document.getElementById('map');\n    view.style.height = window.innerHeight + \"px\";\n    let map = new window.google.maps.Map(view, {\n      zoom: 13,\n      mapTypeControl: false,\n      fullscreenControl: false,\n      center: {lat: 34.963541, lng: -92.022440} // the center of Cabot, Ar\n    });\n    // make the map responsive if screen size changes\n    window.google.maps.event.addDomListener(window, \"resize\", () => {\n      window.google.maps.event.trigger(map, \"resize\");\n      self.state.map.setCenter(map.getCenter());\n    });\n    // if the user clicks somewhere on the map, close the info marker\n    window.google.maps.event.addListener(map, 'click', () => {\n      self.minimizeMarker();\n    });\n    let markerWindow = new window.google.maps.InfoWindow({});\n    //if the user clicks the \"x\" on the marker:\n    window.google.maps.event.addListener(markerWindow, 'closeclick', () => {\n      self.minimizeMarker();\n    });\n    this.setState({\n      'map': map,\n      'currentMarker': markerWindow\n    });\n    this.getAllLocationsInfo();\n  }\n  // get additional info for each location based on API information\n  getAllLocationsInfo () {\n    let self = this;\n    let newLocationsInfo = [];\n    this.state.cabotPlaces.forEach((place) => {\n      //concat name and desc to be more searchable\n      let fullName = place.name + ' - ' + place.description;\n      place.fullName = fullName;\n      place.display = true;\n      let lat = place.latitude;\n      let long = place.longitude;\n      let url = \"https://api.foursquare.com/v2/venues/search?\" + fourSquareClientId + fourSquareClientSecret + fourSquareVersion + \"&ll=\" + lat + \",\" + long + limit;\n      // This fetch call is primarily to get the unique ids for each venue\n      fetch(url).then((res) => {\n        if (res.status !== 200) {\n          place.getDetailsError = res;\n          newLocationsInfo.push(place);\n        } else {\n          res.json().then((data) => {\n            //Set the place Ids\n            place.id = data.response.venues[0].id;\n            // add a marker with a unique Id to the location\n            let marker = new window.google.maps.Marker({\n              animation: window.google.maps.Animation.DROP,\n              position: new window.google.maps.LatLng(place.latitude, place.longitude),\n              map: this.state.map,\n              id:data.response.venues[0].id\n            });\n            marker.addListener('click', function () {\n              self.openmarker(marker);\n            });\n            place.marker = marker;\n            // now that we have the unique id, get detailed info about this location\n            this.getVenueDetails(place, newLocationsInfo);\n          })\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n        place.getDetailsError = err;\n        newLocationsInfo.push(place);\n      });\n    });\n    this.setState({\n      cabotPlaces: newLocationsInfo\n    });\n    // console.log(this.state.cabotPlaces);\n  }\n\n  getVenueDetails (place, newLocationsInfo) {\n    let url = 'https://api.foursquare.com/v2/venues/' + place.id + '?' + fourSquareClientId + fourSquareClientSecret + fourSquareVersion;\n      fetch(url).then((res) => {\n        if (res.status !== 200) {\n          place.getDetailsError = res;\n          newLocationsInfo.push(place);\n        } else {\n          res.json().then((data) => {\n            // console.log(place.name, data);\n            data = data.response.venue;\n            if (data.bestPhoto) {\n              place.img = data.bestPhoto.prefix + \"100x100\" + data.bestPhoto.suffix;\n            }\n            place.hereNow = data.hereNow.summary;\n            place.rating = (data.likes.summary ? data.likes.summary  + \", \" : \"No likes, \") + (data.rating ? data.rating + \"/10 stars.\" : \"No stars.\") ;\n            place.url = data.shortUrl;\n            newLocationsInfo.push(place);\n          })\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n        place.getDetailsError = err;\n        newLocationsInfo.push(place);\n      });\n  }\n  openmarker(marker) {\n    //close any existing markers\n    this.minimizeMarker();\n    //animate the icon of the marker\n    marker.setAnimation(window.google.maps.Animation.BOUNCE);\n    this.setState({\n        'previousMarker': marker\n    });\n    //while waiting for response from displayMarker:\n    this.state.currentMarker.setContent('Loading SquareSpace Data...');\n    //center the map over the selected icon\n    this.state.map.setCenter(marker.getPosition());\n    //offset the screen so the menu doesnt hide the marker\n    this.state.map.panBy(0, -230);\n    // now show the marker info\n    this.displayMarker(marker);\n    //open the marker window on the map\n    this.state.currentMarker.open(this.state.map, marker);\n  }\n  displayMarker(marker) {\n    let self = this;\n    let locationInfo = [];\n    this.state.cabotPlaces.forEach((place) => {\n      if (place.id === marker.id) {\n        locationInfo.push(place);\n        // console.log(locationInfo);\n      }\n    });\n    locationInfo = locationInfo[0];\n    if (!locationInfo.getDetailsError){\n      let heading = '<h2 class=\"location-text\">' + locationInfo.name + '</h2>';\n      let rating = '<span class=\"location-text\">' + locationInfo.rating + '</span><hr/>';\n      let img = locationInfo.img ? '<img src=\"' + locationInfo.img + '\"alt=\"' + locationInfo.name + '\\'s most popular photo\" /><br>' : '<span> No Image for this Venue </span><br>';\n      let hereNow = '<b>Current Visitors: </b>' + locationInfo.hereNow + '<hr/>';\n      let fourSquareLink = '<a href=\"' + locationInfo.url + '\" target=\"_blank\">Check it out on FourSquare!</a> ';\n      self.state.currentMarker.setContent(heading + img + rating + hereNow + fourSquareLink);\n    } else {\n      self.state.currentMarker.setContent(\"We were unable to retrieve details of this location.\");\n    }\n  }\n\n  minimizeMarker() {\n    //stop animations on the previous marker\n    if (this.state.previousMarker) {\n        this.state.previousMarker.setAnimation(null);\n    }\n    //close the current currentMarker\n    if (this.state.currentMarker) {\n      this.state.currentMarker.close();\n    }\n    // remove the previous marker from the state\n    this.setState({\n      'previousMarker': ''\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <Menu\n          key=\"100\"\n          cabotPlaces={this.state.cabotPlaces}\n          openmarker={this.openmarker}\n          minimizeMarker={this.minimizeMarker}\n        />\n        <div id=\"map\" aria-labelledby=\"Map\"></div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","export function getPlaces () {\n  return [\n    {\n        'name': \"The Purple Onion\",\n        'description': \"Restaurant\",\n        'latitude': 34.955031,\n        'longitude': -92.007987,\n        'streetAddress': \"1101 S Pine St, Cabot, AR 72023\"\n    },\n    {\n        'name': \"Allfam Bowling & Entertainment Center\",\n        'description': \"Bowling\",\n        'latitude': 34.941082,\n        'longitude': -92.049554,\n        'streetAddress': \"2350 Lakewood Dr, Cabot, AR 72023\"\n    },\n    {\n        'name': \"Silver Screen Cinema 8\",\n        'description': \"Movie Theater\",\n        'latitude': 34.977540,\n        'longitude': -92.024227,\n        'streetAddress': \"100 Cinema Blvd, Cabot, AR 72023\"\n    },\n    {\n        'name': \"Grinds Coffee Co\",\n        'description': \"Coffee Shop\",\n        'latitude': 34.944463,\n        'longitude': -92.009152,\n        'streetAddress': \"8177, 1904 S Pine St ste a, Cabot, AR 72023\"\n    },\n    {\n        'name': \"Walmart Neighborhood Market\",\n        'description': \"Grocery Store\",\n        'latitude': 34.953394,\n        'longitude': -92.007020,\n        'streetAddress': \"1203 S Pine St, Cabot, AR 72023\"\n    }\n  ]\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}